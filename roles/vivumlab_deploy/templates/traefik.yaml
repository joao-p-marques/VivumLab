#jinja2: trim_blocks:False
---

global:
  checkNewVersion: true
  sendAnonymousUsage: {{ traefik.send_anonymous_usage }}

log:
  level: INFO
  filePath: /var/log/traefik/traefik.log
  format: json
accessLog:
  filePath: /var/log/traefik/access.log
  format: json
  fields:
    defaultMode: keep
    names:
      clientUsername: drop
    headers:
      defaultMode: keep
      names:
        User-Agent: keep
        Authorization: drop
        Content-Type: keep

entryPoints:
  http:
    address: :80
  https:
    address: :443
    http:
      tls:
        options: default
        certResolver: {% if traefik.dns_challenge_provider %}dns{% else %}http{% endif %}
{% if traefik.dns_challenge_provider %}
        domains:
          - main: "{{ domain }}"
            sans:
              - "*.{{ domain }}"
{% endif %}
# {% if healthchecks.enable %}
#  smtp:
#    address: :25
# {% endif %}
# {% if bastion.enable %}
#  ssh:
#    address: ":2222"
# {% endif %}
{% if traefik.ping %}
  #ping@internal
  ping:
    address: ":8081"
{% endif %}
{% if traefik.metrics %}
  #metrics@internal
  metrics:
    address: ":8082"
{% endif %}
{% if peertube.enable %}
  rtmp:
    address: ":1935"
    tls:
      options: default
      certResolver: {% if traefik.dns_challenge_provider %}dns{% else %}http{% endif %}
{% if traefik.dns_challenge_provider %}
      domains:
        - main: "{{ domain }}"
          sans:
            - "*.{{ domain }}"
{% endif %}
{% endif %}
{% if traefik.ping %}
#Health
ping:
  entryPoint: "ping"
  manualRouting: false
{% endif %}
{% if traefik.metrics %}
#Metrics
metrics:
  prometheus:
    entryPoint: metrics
    addEntryPointsLabels: true
    addServicesLabels: true
    manualRouting: false
    buckets:
      - 0.1
      - 0.3
      - 1.2
      - 5.0
{% endif %}

providers:
  providersThrottleDuration: 2s
  docker:
    watch: true
    exposedByDefault: false
    endpoint: unix:///var/run/docker.sock
    swarmModeRefreshSeconds: 15s
  file:
    directory: /conf.d
    watch: true

{% if traefik.expose_internally or traefik.expose_externally %}
api:
  dashboard: true
{% if traefik.expose_internally or sui.enable %}
  insecure: true
{% else %}
  insecure: false
{% endif %}
{% endif %}

log:
  level: ERROR

certificatesResolvers:
  dns:
    acme:
      caServer: {{ traefik.acme_server }}
      email: {{ ((admin_email == None) | ternary('test@test.com', admin_email)) }}
      keyType: EC256
      storage: acme.json
      dnsChallenge:
        delayBeforeCheck: 10
        provider: {{ traefik.dns_challenge_provider }}
        resolvers:
          - '1.1.1.1:53'
          - '1.0.0.1:53'
  http:
    acme:
      caServer: {{ traefik.acme_server }}
      email: {{ ((admin_email == None) | ternary('test@test.com', admin_email)) }}
      keyType: EC256
      storage: acme.json
      httpChallenge:
        # used during the challenge
        entryPoint: http
